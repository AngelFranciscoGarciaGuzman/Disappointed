<%- include('includes/head.ejs', {
    username: username, 
    permisos: permisos
}) %>

<h1 class="title">Repertorio de imagenes epicas 100% real no fake!</h1>


<input type="hidden" id="_csrf" name="_csrf" value="<%= csrfToken %>" >

<input id="buscar" class="input is-info" type="text" placeholder="Buscar..."/><br><br>

<div id="respuesta_ajax">

    <div id="notificacion">

        <% if (construcciones.length < 1) { %>
            <div class="notification is-info">
                <button class="delete"></button>
                No existe la construcción.     
            </div>
            <div class="columns">

        <% } %>

        <% let columns = 0; %>
        <% for (let construccion of construcciones) { %>
            <% columns++ %>

            <div class="column">
                <div class="card">
                    <div class="card-image">
                    <figure class="image is-4by3">
                        <img src="uploads/<%= construccion.imagen %>" alt="Imagen de <%= construccion.nombre %>">
                    </figure>
                    </div>
                    <div class="card-content">
                    <div class="media">
                        <div class="media-left">
                        <figure class="image is-48x48">
                            <img src="uploads/<%= construccion.imagen %>" alt="Imagen de <%= construccion.nombre %>">
                        </figure>
                        </div>
                        <div class="media-content">
                        <p class="title is-4"><%= construccion.nombre %></p>
                        <p class="subtitle is-6">@<%= construccion.nombre%></p>
                        </div>
                    </div>
                
                    <div class="content">
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                        Phasellus nec iaculis mauris. <a>@bulmaio</a>.
                        <a href="#">#css</a> <a href="#">#responsive</a>
                        <br>
                        <time datetime="2016-1-1">11:09 PM - 1 Jan 2016</time><br>
                        <button class="button is-danger is-light" onclick="eliminar('<%= construccion.id %>')">Eliminar</button>
                    </div>
                    </div>
                </div>
            </div>

            <% if (columns % 4 == 0) { %>
                </div>
                <div class="columns">
            <% } %>
            
        <% } %>

    </div>   

</div>

<% if(ultima_construccion != '') { %>
    <div>La última construcción fue <%- ultima_construccion %>.</div>
<% } %>

<script>

const accion_asincrona = () => {
    console.log('Buscando...');
    const valor_busqueda = document.getElementById('buscar').value;

    //función que manda la petición asíncrona
    fetch('/construcciones/buscar/' + valor_busqueda, {
        method: 'GET',
        headers: {
            'Content-Type': 'application/json',
        }
    }).then((result) => {
        console.log(result);
        return result.json(); //Regresa otra promesa
    }).then((data) => {
        console.log(data);
        let html = '';

        html += `<div id="notificacion">`;
            if (data.construcciones.length < 1) { 
                html += 
                    `<div class="notification is-info">
                        <button class="delete"></button>
                        No existe la construcción. 
                    </div>`;           
            }
        html += `</div>`;

        html += `
        <div class="columns">`;


        let columns = 0;
        for (let construccion of data.construcciones) { 
            columns++;

            html += `
            <div class="column">
                <div class="card">
                    <div class="card-image">
                    <figure class="image is-4by3">
                        <img src="uploads/${construccion.imagen}" alt="Imagen de ${construccion.nombre}">
                    </figure>
                    </div>
                    <div class="card-content">
                    <div class="media">
                        <div class="media-left">
                        <figure class="image is-48x48">
                            <img src="uploads/${construccion.imagen}" alt="Imagen de ${construccion.nombre}">
                        </figure>
                        </div>
                        <div class="media-content">
                        <p class="title is-4">${construccion.nombre}</p>
                        <p class="subtitle is-6">@${construccion.nombre}</p>
                        </div>
                    </div>
                
                    <div class="content">
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                        Phasellus nec iaculis mauris. <a>@bulmaio</a>.
                        <a href="#">#css</a> <a href="#">#responsive</a>
                        <br>
                        <time datetime="2016-1-1">11:09 PM - 1 Jan 2016</time><br>
                        <button class="button is-danger is-light" onclick="eliminar(${construccion.id})">Eliminar</button>
                    </div>
                    </div>
                </div>
            </div>`;

            if (columns % 4 == 0) {
                html += `</div>
                <div class="columns">`;
            }
        } 

        html += `</div>`;

        //Modificamos el DOM de nuestra página de acuerdo a los datos de la segunda promesa
        document.getElementById('respuesta_ajax').innerHTML = html;
    }).catch(err => {
        console.log(err);
    });
};

document.getElementById('buscar').onkeyup = accion_asincrona;

const eliminar = (id) => {
    const csrf = document.getElementById('_csrf').value;
    //función que manda la petición asíncrona
    fetch('/construcciones/delete', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'csrf-token': csrf
        },
        body: JSON.stringify({id: id})
    }).then(result => {
        return result.json(); //Regresa otra promesa
    }).then(data => {
        console.log(data);
        let html = '';

        html += `<div id="notificacion">`;
            if (data.construcciones.length < 1) { 
                html += 
                    `<div class="notification is-info">
                        <button class="delete"></button>
                        No existe la construcción. 
                    </div>`;           
            }
        html += `</div>`;

        html += `
        <div class="columns">`;

        let columns = 0;
        for (let construccion of data.construcciones) { 
            columns++;
            html += `
            <div class="column">
                <div class="card">
                    <div class="card-image">
                    <figure class="image is-4by3">
                        <img src="uploads/${construccion.imagen}" alt="Imagen de ${construccion.nombre}">
                    </figure>
                    </div>
                    <div class="card-content">
                    <div class="media">
                        <div class="media-left">
                        <figure class="image is-48x48">
                            <img src="uploads/${construccion.imagen}" alt="Imagen de ${construccion.nombre}">
                        </figure>
                        </div>
                        <div class="media-content">
                        <p class="title is-4">${construccion.nombre}</p>
                        <p class="subtitle is-6">@${construccion.nombre}</p>
                        </div>
                    </div>
                
                    <div class="content">
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                        Phasellus nec iaculis mauris. <a>@bulmaio</a>.
                        <a href="#">#css</a> <a href="#">#responsive</a>
                        <br>
                        <time datetime="2016-1-1">11:09 PM - 1 Jan 2016</time><br>
                        <button class="button is-danger is-light" onclick="eliminar(${construccion.id})">Eliminar</button>
                    </div>
                    </div>
                </div>
            </div>`;
            if (columns % 4 == 0) {
                html += `</div>
                <div class="columns">`;
            }
        } 
        html += `</div>`;
        //Modificamos el DOM de nuestra página de acuerdo a los datos de la segunda promesa
        document.getElementById('respuesta_ajax').innerHTML = html;

        document.getElementById('notificacion').innerHTML = 
            `<div class="notification is-info">
                <button class="delete"></button>
                La construcción fue eliminada. 
            </div>`;

            
    }).catch(err => {
        console.log(err);
    });
};


</script> 

<hr class="separator">

<div class="faq-section">
    <h2>Preguntas frecuentes sobre AJAX</h2>
    <div class="faq-item">
        <h3>¿Qué importancia tiene AJAX en el desarrollo de RIA's (Rich Internet Applications)?</h3>
        <p>AJAX permite cargar y enviar datos de forma asíncrona sin necesidad de recargar toda la página, lo que mejora la experiencia del usuario al proporcionar interacciones más dinámicas y rápidas en las aplicaciones web.</p>
    </div>
    <div class="faq-item">
        <h3>¿Qué implicaciones de seguridad tiene AJAX? ¿Dónde se deben hacer las validaciones de seguridad, del lado del cliente o del lado del servidor?</h3>
        <p>AJAX puede introducir vulnerabilidades de seguridad como ataques CSRF y XSS si no se implementan correctamente medidas de seguridad. Las validaciones de seguridad más importantes deben hacerse en el lado del servidor, ya que el lado del cliente es potencialmente vulnerable a manipulaciones por parte de usuarios malintencionados.</p>
    </div>
    <div class="faq-item">
        <h3>¿Qué es JSON?</h3>
        <p>JSON (JavaScript Object Notation) es un formato ligero de intercambio de datos que se utiliza comúnmente para enviar datos entre un servidor y un navegador web. Es legible tanto para humanos como para máquinas, y se basa en una sintaxis de objeto similar a la de JavaScript.</p>
    </div>
</div>

<hr class="separator">

<footer>
    <p>Componentes AJAX utilizados:</p>
    <ul>
        <li>Función fetch para la búsqueda asíncrona de construcciones.</li>
    </ul>
</footer>


<%- include('includes/foot.ejs') %>